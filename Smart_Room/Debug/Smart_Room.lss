
Smart_Room.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000bb6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  00000bb6  00000c4a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  0080006e  0080006e  00000c58  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c58  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  00000cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017a5  00000000  00000000  00000e3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009da  00000000  00000000  000025e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c9a  00000000  00000000  00002fbb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000284  00000000  00000000  00003c58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000057c  00000000  00000000  00003edc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fcd  00000000  00000000  00004458  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  00005425  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__ctors_end>
   4:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
   8:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
   c:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  10:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  14:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  18:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  1c:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  20:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  24:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  28:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  2c:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  30:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  34:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  38:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  3c:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  40:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  44:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  48:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  4c:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  50:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
  54:	2f 01       	movw	r4, r30
  56:	48 01       	movw	r8, r16
  58:	61 01       	movw	r12, r2
  5a:	7a 01       	movw	r14, r20
  5c:	92 01       	movw	r18, r4
  5e:	92 01       	movw	r18, r4
  60:	92 01       	movw	r18, r4
  62:	92 01       	movw	r18, r4
  64:	92 01       	movw	r18, r4
  66:	92 01       	movw	r18, r4
  68:	92 01       	movw	r18, r4
  6a:	92 01       	movw	r18, r4
  6c:	92 01       	movw	r18, r4
  6e:	92 01       	movw	r18, r4
  70:	92 01       	movw	r18, r4
  72:	92 01       	movw	r18, r4
  74:	92 01       	movw	r18, r4
  76:	92 01       	movw	r18, r4
  78:	92 01       	movw	r18, r4
  7a:	92 01       	movw	r18, r4
  7c:	92 01       	movw	r18, r4
  7e:	92 01       	movw	r18, r4
  80:	92 01       	movw	r18, r4
  82:	92 01       	movw	r18, r4
  84:	92 01       	movw	r18, r4
  86:	92 01       	movw	r18, r4
  88:	92 01       	movw	r18, r4
  8a:	92 01       	movw	r18, r4
  8c:	92 01       	movw	r18, r4
  8e:	92 01       	movw	r18, r4
  90:	92 01       	movw	r18, r4
  92:	92 01       	movw	r18, r4
  94:	2f 01       	movw	r4, r30
  96:	48 01       	movw	r8, r16
  98:	61 01       	movw	r12, r2
  9a:	7a 01       	movw	r14, r20
  9c:	9f 01       	movw	r18, r30
  9e:	b8 01       	movw	r22, r16
  a0:	d1 01       	movw	r26, r2
  a2:	ea 01       	movw	r28, r20
  a4:	02 02       	muls	r16, r18
  a6:	02 02       	muls	r16, r18
  a8:	02 02       	muls	r16, r18
  aa:	02 02       	muls	r16, r18
  ac:	02 02       	muls	r16, r18
  ae:	02 02       	muls	r16, r18
  b0:	02 02       	muls	r16, r18
  b2:	02 02       	muls	r16, r18
  b4:	02 02       	muls	r16, r18
  b6:	02 02       	muls	r16, r18
  b8:	02 02       	muls	r16, r18
  ba:	02 02       	muls	r16, r18
  bc:	02 02       	muls	r16, r18
  be:	02 02       	muls	r16, r18
  c0:	02 02       	muls	r16, r18
  c2:	02 02       	muls	r16, r18
  c4:	02 02       	muls	r16, r18
  c6:	02 02       	muls	r16, r18
  c8:	02 02       	muls	r16, r18
  ca:	02 02       	muls	r16, r18
  cc:	02 02       	muls	r16, r18
  ce:	02 02       	muls	r16, r18
  d0:	02 02       	muls	r16, r18
  d2:	02 02       	muls	r16, r18
  d4:	02 02       	muls	r16, r18
  d6:	02 02       	muls	r16, r18
  d8:	02 02       	muls	r16, r18
  da:	02 02       	muls	r16, r18
  dc:	9f 01       	movw	r18, r30
  de:	b8 01       	movw	r22, r16
  e0:	d1 01       	movw	r26, r2
  e2:	ea 01       	movw	r28, r20
  e4:	0e 02       	muls	r16, r30
  e6:	19 02       	muls	r17, r25
  e8:	24 02       	muls	r18, r20
  ea:	2f 02       	muls	r18, r31
  ec:	39 02       	muls	r19, r25
  ee:	39 02       	muls	r19, r25
  f0:	39 02       	muls	r19, r25
  f2:	39 02       	muls	r19, r25
  f4:	39 02       	muls	r19, r25
  f6:	39 02       	muls	r19, r25
  f8:	39 02       	muls	r19, r25
  fa:	39 02       	muls	r19, r25
  fc:	39 02       	muls	r19, r25
  fe:	39 02       	muls	r19, r25
 100:	39 02       	muls	r19, r25
 102:	39 02       	muls	r19, r25
 104:	39 02       	muls	r19, r25
 106:	39 02       	muls	r19, r25
 108:	39 02       	muls	r19, r25
 10a:	39 02       	muls	r19, r25
 10c:	39 02       	muls	r19, r25
 10e:	39 02       	muls	r19, r25
 110:	39 02       	muls	r19, r25
 112:	39 02       	muls	r19, r25
 114:	39 02       	muls	r19, r25
 116:	39 02       	muls	r19, r25
 118:	39 02       	muls	r19, r25
 11a:	39 02       	muls	r19, r25
 11c:	39 02       	muls	r19, r25
 11e:	39 02       	muls	r19, r25
 120:	39 02       	muls	r19, r25
 122:	39 02       	muls	r19, r25
 124:	0e 02       	muls	r16, r30
 126:	19 02       	muls	r17, r25
 128:	24 02       	muls	r18, r20
 12a:	2f 02       	muls	r18, r31
 12c:	46 02       	muls	r20, r22
 12e:	5a 02       	muls	r21, r26
 130:	6e 02       	muls	r22, r30
 132:	82 02       	muls	r24, r18
 134:	96 02       	muls	r25, r22
 136:	96 02       	muls	r25, r22
 138:	96 02       	muls	r25, r22
 13a:	96 02       	muls	r25, r22
 13c:	96 02       	muls	r25, r22
 13e:	96 02       	muls	r25, r22
 140:	96 02       	muls	r25, r22
 142:	96 02       	muls	r25, r22
 144:	96 02       	muls	r25, r22
 146:	96 02       	muls	r25, r22
 148:	96 02       	muls	r25, r22
 14a:	96 02       	muls	r25, r22
 14c:	96 02       	muls	r25, r22
 14e:	96 02       	muls	r25, r22
 150:	96 02       	muls	r25, r22
 152:	96 02       	muls	r25, r22
 154:	96 02       	muls	r25, r22
 156:	96 02       	muls	r25, r22
 158:	96 02       	muls	r25, r22
 15a:	96 02       	muls	r25, r22
 15c:	96 02       	muls	r25, r22
 15e:	96 02       	muls	r25, r22
 160:	96 02       	muls	r25, r22
 162:	96 02       	muls	r25, r22
 164:	96 02       	muls	r25, r22
 166:	96 02       	muls	r25, r22
 168:	96 02       	muls	r25, r22
 16a:	96 02       	muls	r25, r22
 16c:	46 02       	muls	r20, r22
 16e:	5a 02       	muls	r21, r26
 170:	6e 02       	muls	r22, r30
 172:	82 02       	muls	r24, r18
 174:	a5 02       	muls	r26, r21
 176:	ac 02       	muls	r26, r28
 178:	b3 02       	muls	r27, r19
 17a:	ba 02       	muls	r27, r26
 17c:	c0 02       	muls	r28, r16
 17e:	c0 02       	muls	r28, r16
 180:	c0 02       	muls	r28, r16
 182:	c0 02       	muls	r28, r16
 184:	c0 02       	muls	r28, r16
 186:	c0 02       	muls	r28, r16
 188:	c0 02       	muls	r28, r16
 18a:	c0 02       	muls	r28, r16
 18c:	c0 02       	muls	r28, r16
 18e:	c0 02       	muls	r28, r16
 190:	c0 02       	muls	r28, r16
 192:	c0 02       	muls	r28, r16
 194:	c0 02       	muls	r28, r16
 196:	c0 02       	muls	r28, r16
 198:	c0 02       	muls	r28, r16
 19a:	c0 02       	muls	r28, r16
 19c:	c0 02       	muls	r28, r16
 19e:	c0 02       	muls	r28, r16
 1a0:	c0 02       	muls	r28, r16
 1a2:	c0 02       	muls	r28, r16
 1a4:	c0 02       	muls	r28, r16
 1a6:	c0 02       	muls	r28, r16
 1a8:	c0 02       	muls	r28, r16
 1aa:	c0 02       	muls	r28, r16
 1ac:	c0 02       	muls	r28, r16
 1ae:	c0 02       	muls	r28, r16
 1b0:	c0 02       	muls	r28, r16
 1b2:	c0 02       	muls	r28, r16
 1b4:	a5 02       	muls	r26, r21
 1b6:	ac 02       	muls	r26, r28
 1b8:	b3 02       	muls	r27, r19
 1ba:	ba 02       	muls	r27, r26

000001bc <__ctors_end>:
 1bc:	11 24       	eor	r1, r1
 1be:	1f be       	out	0x3f, r1	; 63
 1c0:	cf e5       	ldi	r28, 0x5F	; 95
 1c2:	d8 e0       	ldi	r29, 0x08	; 8
 1c4:	de bf       	out	0x3e, r29	; 62
 1c6:	cd bf       	out	0x3d, r28	; 61

000001c8 <__do_copy_data>:
 1c8:	10 e0       	ldi	r17, 0x00	; 0
 1ca:	a0 e6       	ldi	r26, 0x60	; 96
 1cc:	b0 e0       	ldi	r27, 0x00	; 0
 1ce:	e6 eb       	ldi	r30, 0xB6	; 182
 1d0:	fb e0       	ldi	r31, 0x0B	; 11
 1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <__do_copy_data+0x10>
 1d4:	05 90       	lpm	r0, Z+
 1d6:	0d 92       	st	X+, r0
 1d8:	ae 36       	cpi	r26, 0x6E	; 110
 1da:	b1 07       	cpc	r27, r17
 1dc:	d9 f7       	brne	.-10     	; 0x1d4 <__do_copy_data+0xc>

000001de <__do_clear_bss>:
 1de:	20 e0       	ldi	r18, 0x00	; 0
 1e0:	ae e6       	ldi	r26, 0x6E	; 110
 1e2:	b0 e0       	ldi	r27, 0x00	; 0
 1e4:	01 c0       	rjmp	.+2      	; 0x1e8 <.do_clear_bss_start>

000001e6 <.do_clear_bss_loop>:
 1e6:	1d 92       	st	X+, r1

000001e8 <.do_clear_bss_start>:
 1e8:	a1 37       	cpi	r26, 0x71	; 113
 1ea:	b2 07       	cpc	r27, r18
 1ec:	e1 f7       	brne	.-8      	; 0x1e6 <.do_clear_bss_loop>
 1ee:	0e 94 a9 03 	call	0x752	; 0x752 <main>
 1f2:	0c 94 d9 05 	jmp	0xbb2	; 0xbb2 <_exit>

000001f6 <__bad_interrupt>:
 1f6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001fa <ADC_init>:
#include "macro_function.h"


void ADC_init(void)
{
	SET_BIT(ADMUX,REFS0); //configure VREF
 1fa:	87 b1       	in	r24, 0x07	; 7
 1fc:	80 64       	ori	r24, 0x40	; 64
 1fe:	87 b9       	out	0x07, r24	; 7
	SET_BIT(ADMUX,REFS1);
 200:	87 b1       	in	r24, 0x07	; 7
 202:	80 68       	ori	r24, 0x80	; 128
 204:	87 b9       	out	0x07, r24	; 7
	SET_BIT(ADCSRA,ADEN); // enable ADC
 206:	86 b1       	in	r24, 0x06	; 6
 208:	80 68       	ori	r24, 0x80	; 128
 20a:	86 b9       	out	0x06, r24	; 6
	/* adjust ADC clock*/
	SET_BIT(ADCSRA,ADPS2);
 20c:	86 b1       	in	r24, 0x06	; 6
 20e:	84 60       	ori	r24, 0x04	; 4
 210:	86 b9       	out	0x06, r24	; 6
	SET_BIT(ADCSRA,ADPS1);
 212:	86 b1       	in	r24, 0x06	; 6
 214:	82 60       	ori	r24, 0x02	; 2
 216:	86 b9       	out	0x06, r24	; 6
 218:	08 95       	ret

0000021a <ADC_u16Read>:

 unsigned short ADC_u16Read(void)
{
	 unsigned short read_val;
	
	SET_BIT(ADCSRA,ADSC);
 21a:	86 b1       	in	r24, 0x06	; 6
 21c:	80 64       	ori	r24, 0x40	; 64
 21e:	86 b9       	out	0x06, r24	; 6
	while(IS_BIT_CLR(ADCSRA,ADIF));//stay in your position till ADIF become 1
 220:	34 9b       	sbis	0x06, 4	; 6
 222:	fe cf       	rjmp	.-4      	; 0x220 <ADC_u16Read+0x6>
	SET_BIT(ADCSRA,ADIF); // clear ADIF
 224:	86 b1       	in	r24, 0x06	; 6
 226:	80 61       	ori	r24, 0x10	; 16
 228:	86 b9       	out	0x06, r24	; 6
	read_val=(ADCL);
 22a:	24 b1       	in	r18, 0x04	; 4
	read_val|=(ADCH<<8);
 22c:	85 b1       	in	r24, 0x05	; 5
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	98 2f       	mov	r25, r24
 232:	88 27       	eor	r24, r24
	return read_val ;
 234:	82 2b       	or	r24, r18
 236:	08 95       	ret

00000238 <BUTTON_init>:

void BUTTON_init_with_pull_up(unsigned char port,unsigned char pin_number)
{
	DIO_set_pin_dir(port,pin_number,0); // input
	DIO_write_pin(port,pin_number,1); //pull up
}
 238:	40 e0       	ldi	r20, 0x00	; 0
 23a:	0e 94 23 01 	call	0x246	; 0x246 <DIO_set_pin_dir>
 23e:	08 95       	ret

00000240 <BUTTON_read>:

unsigned char BUTTON_read(unsigned char port,unsigned char pin_number)
{
	unsigned char ret_value;
	ret_value=DIO_read_pin(port,pin_number);
 240:	0e 94 3a 02 	call	0x474	; 0x474 <DIO_read_pin>
	return ret_value;
}
 244:	08 95       	ret

00000246 <DIO_set_pin_dir>:
		PORTC|=value;
		break;
		case 'D':
		case 'd':
		PORTD&=0xf0;
		PORTD|=value;
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	fc 01       	movw	r30, r24
 24a:	e1 54       	subi	r30, 0x41	; 65
 24c:	f1 09       	sbc	r31, r1
 24e:	e4 32       	cpi	r30, 0x24	; 36
 250:	f1 05       	cpc	r31, r1
 252:	08 f0       	brcs	.+2      	; 0x256 <DIO_set_pin_dir+0x10>
 254:	67 c0       	rjmp	.+206    	; 0x324 <DIO_set_pin_dir+0xde>
 256:	e6 5d       	subi	r30, 0xD6	; 214
 258:	ff 4f       	sbci	r31, 0xFF	; 255
 25a:	0c 94 c4 05 	jmp	0xb88	; 0xb88 <__tablejump2__>
 25e:	41 30       	cpi	r20, 0x01	; 1
 260:	59 f4       	brne	.+22     	; 0x278 <DIO_set_pin_dir+0x32>
 262:	2a b3       	in	r18, 0x1a	; 26
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	02 c0       	rjmp	.+4      	; 0x26e <DIO_set_pin_dir+0x28>
 26a:	88 0f       	add	r24, r24
 26c:	99 1f       	adc	r25, r25
 26e:	6a 95       	dec	r22
 270:	e2 f7       	brpl	.-8      	; 0x26a <DIO_set_pin_dir+0x24>
 272:	82 2b       	or	r24, r18
 274:	8a bb       	out	0x1a, r24	; 26
 276:	08 95       	ret
 278:	2a b3       	in	r18, 0x1a	; 26
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_set_pin_dir+0x3e>
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	6a 95       	dec	r22
 286:	e2 f7       	brpl	.-8      	; 0x280 <DIO_set_pin_dir+0x3a>
 288:	80 95       	com	r24
 28a:	82 23       	and	r24, r18
 28c:	8a bb       	out	0x1a, r24	; 26
 28e:	08 95       	ret
 290:	41 30       	cpi	r20, 0x01	; 1
 292:	59 f4       	brne	.+22     	; 0x2aa <DIO_set_pin_dir+0x64>
 294:	27 b3       	in	r18, 0x17	; 23
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	02 c0       	rjmp	.+4      	; 0x2a0 <DIO_set_pin_dir+0x5a>
 29c:	88 0f       	add	r24, r24
 29e:	99 1f       	adc	r25, r25
 2a0:	6a 95       	dec	r22
 2a2:	e2 f7       	brpl	.-8      	; 0x29c <DIO_set_pin_dir+0x56>
 2a4:	82 2b       	or	r24, r18
 2a6:	87 bb       	out	0x17, r24	; 23
 2a8:	08 95       	ret
 2aa:	27 b3       	in	r18, 0x17	; 23
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <DIO_set_pin_dir+0x70>
 2b2:	88 0f       	add	r24, r24
 2b4:	99 1f       	adc	r25, r25
 2b6:	6a 95       	dec	r22
 2b8:	e2 f7       	brpl	.-8      	; 0x2b2 <DIO_set_pin_dir+0x6c>
 2ba:	80 95       	com	r24
 2bc:	82 23       	and	r24, r18
 2be:	87 bb       	out	0x17, r24	; 23
 2c0:	08 95       	ret
 2c2:	41 30       	cpi	r20, 0x01	; 1
 2c4:	59 f4       	brne	.+22     	; 0x2dc <DIO_set_pin_dir+0x96>
 2c6:	24 b3       	in	r18, 0x14	; 20
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <DIO_set_pin_dir+0x8c>
 2ce:	88 0f       	add	r24, r24
 2d0:	99 1f       	adc	r25, r25
 2d2:	6a 95       	dec	r22
 2d4:	e2 f7       	brpl	.-8      	; 0x2ce <DIO_set_pin_dir+0x88>
 2d6:	82 2b       	or	r24, r18
 2d8:	84 bb       	out	0x14, r24	; 20
 2da:	08 95       	ret
 2dc:	24 b3       	in	r18, 0x14	; 20
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	02 c0       	rjmp	.+4      	; 0x2e8 <DIO_set_pin_dir+0xa2>
 2e4:	88 0f       	add	r24, r24
 2e6:	99 1f       	adc	r25, r25
 2e8:	6a 95       	dec	r22
 2ea:	e2 f7       	brpl	.-8      	; 0x2e4 <DIO_set_pin_dir+0x9e>
 2ec:	80 95       	com	r24
 2ee:	82 23       	and	r24, r18
 2f0:	84 bb       	out	0x14, r24	; 20
 2f2:	08 95       	ret
 2f4:	41 30       	cpi	r20, 0x01	; 1
 2f6:	59 f4       	brne	.+22     	; 0x30e <DIO_set_pin_dir+0xc8>
 2f8:	21 b3       	in	r18, 0x11	; 17
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	02 c0       	rjmp	.+4      	; 0x304 <DIO_set_pin_dir+0xbe>
 300:	88 0f       	add	r24, r24
 302:	99 1f       	adc	r25, r25
 304:	6a 95       	dec	r22
 306:	e2 f7       	brpl	.-8      	; 0x300 <DIO_set_pin_dir+0xba>
 308:	82 2b       	or	r24, r18
 30a:	81 bb       	out	0x11, r24	; 17
 30c:	08 95       	ret
 30e:	21 b3       	in	r18, 0x11	; 17
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	02 c0       	rjmp	.+4      	; 0x31a <DIO_set_pin_dir+0xd4>
 316:	88 0f       	add	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	6a 95       	dec	r22
 31c:	e2 f7       	brpl	.-8      	; 0x316 <DIO_set_pin_dir+0xd0>
 31e:	80 95       	com	r24
 320:	82 23       	and	r24, r18
 322:	81 bb       	out	0x11, r24	; 17
 324:	08 95       	ret

00000326 <DIO_write_pin>:
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	fc 01       	movw	r30, r24
 32a:	e1 54       	subi	r30, 0x41	; 65
 32c:	f1 09       	sbc	r31, r1
 32e:	e4 32       	cpi	r30, 0x24	; 36
 330:	f1 05       	cpc	r31, r1
 332:	08 f0       	brcs	.+2      	; 0x336 <DIO_write_pin+0x10>
 334:	67 c0       	rjmp	.+206    	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 336:	e2 5b       	subi	r30, 0xB2	; 178
 338:	ff 4f       	sbci	r31, 0xFF	; 255
 33a:	0c 94 c4 05 	jmp	0xb88	; 0xb88 <__tablejump2__>
 33e:	41 30       	cpi	r20, 0x01	; 1
 340:	59 f4       	brne	.+22     	; 0x358 <DIO_write_pin+0x32>
 342:	2b b3       	in	r18, 0x1b	; 27
 344:	81 e0       	ldi	r24, 0x01	; 1
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	02 c0       	rjmp	.+4      	; 0x34e <DIO_write_pin+0x28>
 34a:	88 0f       	add	r24, r24
 34c:	99 1f       	adc	r25, r25
 34e:	6a 95       	dec	r22
 350:	e2 f7       	brpl	.-8      	; 0x34a <DIO_write_pin+0x24>
 352:	82 2b       	or	r24, r18
 354:	8b bb       	out	0x1b, r24	; 27
 356:	08 95       	ret
 358:	2b b3       	in	r18, 0x1b	; 27
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	02 c0       	rjmp	.+4      	; 0x364 <DIO_write_pin+0x3e>
 360:	88 0f       	add	r24, r24
 362:	99 1f       	adc	r25, r25
 364:	6a 95       	dec	r22
 366:	e2 f7       	brpl	.-8      	; 0x360 <DIO_write_pin+0x3a>
 368:	80 95       	com	r24
 36a:	82 23       	and	r24, r18
 36c:	8b bb       	out	0x1b, r24	; 27
 36e:	08 95       	ret
 370:	41 30       	cpi	r20, 0x01	; 1
 372:	59 f4       	brne	.+22     	; 0x38a <DIO_write_pin+0x64>
 374:	28 b3       	in	r18, 0x18	; 24
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	02 c0       	rjmp	.+4      	; 0x380 <DIO_write_pin+0x5a>
 37c:	88 0f       	add	r24, r24
 37e:	99 1f       	adc	r25, r25
 380:	6a 95       	dec	r22
 382:	e2 f7       	brpl	.-8      	; 0x37c <DIO_write_pin+0x56>
 384:	82 2b       	or	r24, r18
 386:	88 bb       	out	0x18, r24	; 24
 388:	08 95       	ret
 38a:	28 b3       	in	r18, 0x18	; 24
 38c:	81 e0       	ldi	r24, 0x01	; 1
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	02 c0       	rjmp	.+4      	; 0x396 <DIO_write_pin+0x70>
 392:	88 0f       	add	r24, r24
 394:	99 1f       	adc	r25, r25
 396:	6a 95       	dec	r22
 398:	e2 f7       	brpl	.-8      	; 0x392 <DIO_write_pin+0x6c>
 39a:	80 95       	com	r24
 39c:	82 23       	and	r24, r18
 39e:	88 bb       	out	0x18, r24	; 24
 3a0:	08 95       	ret
 3a2:	41 30       	cpi	r20, 0x01	; 1
 3a4:	59 f4       	brne	.+22     	; 0x3bc <DIO_write_pin+0x96>
 3a6:	25 b3       	in	r18, 0x15	; 21
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <DIO_write_pin+0x8c>
 3ae:	88 0f       	add	r24, r24
 3b0:	99 1f       	adc	r25, r25
 3b2:	6a 95       	dec	r22
 3b4:	e2 f7       	brpl	.-8      	; 0x3ae <DIO_write_pin+0x88>
 3b6:	82 2b       	or	r24, r18
 3b8:	85 bb       	out	0x15, r24	; 21
 3ba:	08 95       	ret
 3bc:	25 b3       	in	r18, 0x15	; 21
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	02 c0       	rjmp	.+4      	; 0x3c8 <DIO_write_pin+0xa2>
 3c4:	88 0f       	add	r24, r24
 3c6:	99 1f       	adc	r25, r25
 3c8:	6a 95       	dec	r22
 3ca:	e2 f7       	brpl	.-8      	; 0x3c4 <DIO_write_pin+0x9e>
 3cc:	80 95       	com	r24
 3ce:	82 23       	and	r24, r18
 3d0:	85 bb       	out	0x15, r24	; 21
 3d2:	08 95       	ret
 3d4:	41 30       	cpi	r20, 0x01	; 1
 3d6:	59 f4       	brne	.+22     	; 0x3ee <DIO_write_pin+0xc8>
 3d8:	22 b3       	in	r18, 0x12	; 18
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	02 c0       	rjmp	.+4      	; 0x3e4 <DIO_write_pin+0xbe>
 3e0:	88 0f       	add	r24, r24
 3e2:	99 1f       	adc	r25, r25
 3e4:	6a 95       	dec	r22
 3e6:	e2 f7       	brpl	.-8      	; 0x3e0 <DIO_write_pin+0xba>
 3e8:	82 2b       	or	r24, r18
 3ea:	82 bb       	out	0x12, r24	; 18
 3ec:	08 95       	ret
 3ee:	22 b3       	in	r18, 0x12	; 18
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <DIO_write_pin+0xd4>
 3f6:	88 0f       	add	r24, r24
 3f8:	99 1f       	adc	r25, r25
 3fa:	6a 95       	dec	r22
 3fc:	e2 f7       	brpl	.-8      	; 0x3f6 <DIO_write_pin+0xd0>
 3fe:	80 95       	com	r24
 400:	82 23       	and	r24, r18
 402:	82 bb       	out	0x12, r24	; 18
 404:	08 95       	ret

00000406 <DIO_toggle_pin>:
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	fc 01       	movw	r30, r24
 40a:	e1 54       	subi	r30, 0x41	; 65
 40c:	f1 09       	sbc	r31, r1
 40e:	e4 32       	cpi	r30, 0x24	; 36
 410:	f1 05       	cpc	r31, r1
 412:	78 f5       	brcc	.+94     	; 0x472 <DIO_toggle_pin+0x6c>
 414:	ee 58       	subi	r30, 0x8E	; 142
 416:	ff 4f       	sbci	r31, 0xFF	; 255
 418:	0c 94 c4 05 	jmp	0xb88	; 0xb88 <__tablejump2__>
 41c:	2b b3       	in	r18, 0x1b	; 27
 41e:	81 e0       	ldi	r24, 0x01	; 1
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	02 c0       	rjmp	.+4      	; 0x428 <DIO_toggle_pin+0x22>
 424:	88 0f       	add	r24, r24
 426:	99 1f       	adc	r25, r25
 428:	6a 95       	dec	r22
 42a:	e2 f7       	brpl	.-8      	; 0x424 <DIO_toggle_pin+0x1e>
 42c:	82 27       	eor	r24, r18
 42e:	8b bb       	out	0x1b, r24	; 27
 430:	08 95       	ret
 432:	28 b3       	in	r18, 0x18	; 24
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	02 c0       	rjmp	.+4      	; 0x43e <DIO_toggle_pin+0x38>
 43a:	88 0f       	add	r24, r24
 43c:	99 1f       	adc	r25, r25
 43e:	6a 95       	dec	r22
 440:	e2 f7       	brpl	.-8      	; 0x43a <DIO_toggle_pin+0x34>
 442:	82 27       	eor	r24, r18
 444:	88 bb       	out	0x18, r24	; 24
 446:	08 95       	ret
 448:	25 b3       	in	r18, 0x15	; 21
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	02 c0       	rjmp	.+4      	; 0x454 <DIO_toggle_pin+0x4e>
 450:	88 0f       	add	r24, r24
 452:	99 1f       	adc	r25, r25
 454:	6a 95       	dec	r22
 456:	e2 f7       	brpl	.-8      	; 0x450 <DIO_toggle_pin+0x4a>
 458:	82 27       	eor	r24, r18
 45a:	85 bb       	out	0x15, r24	; 21
 45c:	08 95       	ret
 45e:	22 b3       	in	r18, 0x12	; 18
 460:	81 e0       	ldi	r24, 0x01	; 1
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	02 c0       	rjmp	.+4      	; 0x46a <DIO_toggle_pin+0x64>
 466:	88 0f       	add	r24, r24
 468:	99 1f       	adc	r25, r25
 46a:	6a 95       	dec	r22
 46c:	e2 f7       	brpl	.-8      	; 0x466 <DIO_toggle_pin+0x60>
 46e:	82 27       	eor	r24, r18
 470:	82 bb       	out	0x12, r24	; 18
 472:	08 95       	ret

00000474 <DIO_read_pin>:
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	fc 01       	movw	r30, r24
 478:	e1 54       	subi	r30, 0x41	; 65
 47a:	f1 09       	sbc	r31, r1
 47c:	e4 32       	cpi	r30, 0x24	; 36
 47e:	f1 05       	cpc	r31, r1
 480:	08 f0       	brcs	.+2      	; 0x484 <DIO_read_pin+0x10>
 482:	54 c0       	rjmp	.+168    	; 0x52c <DIO_read_pin+0xb8>
 484:	ea 56       	subi	r30, 0x6A	; 106
 486:	ff 4f       	sbci	r31, 0xFF	; 255
 488:	0c 94 c4 05 	jmp	0xb88	; 0xb88 <__tablejump2__>
 48c:	49 b3       	in	r20, 0x19	; 25
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	9c 01       	movw	r18, r24
 494:	06 2e       	mov	r0, r22
 496:	02 c0       	rjmp	.+4      	; 0x49c <DIO_read_pin+0x28>
 498:	22 0f       	add	r18, r18
 49a:	33 1f       	adc	r19, r19
 49c:	0a 94       	dec	r0
 49e:	e2 f7       	brpl	.-8      	; 0x498 <DIO_read_pin+0x24>
 4a0:	84 2f       	mov	r24, r20
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	82 23       	and	r24, r18
 4a6:	93 23       	and	r25, r19
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <DIO_read_pin+0x3a>
 4aa:	95 95       	asr	r25
 4ac:	87 95       	ror	r24
 4ae:	6a 95       	dec	r22
 4b0:	e2 f7       	brpl	.-8      	; 0x4aa <DIO_read_pin+0x36>
 4b2:	08 95       	ret
 4b4:	46 b3       	in	r20, 0x16	; 22
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	9c 01       	movw	r18, r24
 4bc:	06 2e       	mov	r0, r22
 4be:	02 c0       	rjmp	.+4      	; 0x4c4 <DIO_read_pin+0x50>
 4c0:	22 0f       	add	r18, r18
 4c2:	33 1f       	adc	r19, r19
 4c4:	0a 94       	dec	r0
 4c6:	e2 f7       	brpl	.-8      	; 0x4c0 <DIO_read_pin+0x4c>
 4c8:	84 2f       	mov	r24, r20
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	82 23       	and	r24, r18
 4ce:	93 23       	and	r25, r19
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <DIO_read_pin+0x62>
 4d2:	95 95       	asr	r25
 4d4:	87 95       	ror	r24
 4d6:	6a 95       	dec	r22
 4d8:	e2 f7       	brpl	.-8      	; 0x4d2 <DIO_read_pin+0x5e>
 4da:	08 95       	ret
 4dc:	43 b3       	in	r20, 0x13	; 19
 4de:	81 e0       	ldi	r24, 0x01	; 1
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	9c 01       	movw	r18, r24
 4e4:	06 2e       	mov	r0, r22
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <DIO_read_pin+0x78>
 4e8:	22 0f       	add	r18, r18
 4ea:	33 1f       	adc	r19, r19
 4ec:	0a 94       	dec	r0
 4ee:	e2 f7       	brpl	.-8      	; 0x4e8 <DIO_read_pin+0x74>
 4f0:	84 2f       	mov	r24, r20
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	82 23       	and	r24, r18
 4f6:	93 23       	and	r25, r19
 4f8:	02 c0       	rjmp	.+4      	; 0x4fe <DIO_read_pin+0x8a>
 4fa:	95 95       	asr	r25
 4fc:	87 95       	ror	r24
 4fe:	6a 95       	dec	r22
 500:	e2 f7       	brpl	.-8      	; 0x4fa <DIO_read_pin+0x86>
 502:	08 95       	ret
 504:	40 b3       	in	r20, 0x10	; 16
 506:	81 e0       	ldi	r24, 0x01	; 1
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	9c 01       	movw	r18, r24
 50c:	06 2e       	mov	r0, r22
 50e:	02 c0       	rjmp	.+4      	; 0x514 <DIO_read_pin+0xa0>
 510:	22 0f       	add	r18, r18
 512:	33 1f       	adc	r19, r19
 514:	0a 94       	dec	r0
 516:	e2 f7       	brpl	.-8      	; 0x510 <DIO_read_pin+0x9c>
 518:	84 2f       	mov	r24, r20
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	82 23       	and	r24, r18
 51e:	93 23       	and	r25, r19
 520:	02 c0       	rjmp	.+4      	; 0x526 <DIO_read_pin+0xb2>
 522:	95 95       	asr	r25
 524:	87 95       	ror	r24
 526:	6a 95       	dec	r22
 528:	e2 f7       	brpl	.-8      	; 0x522 <DIO_read_pin+0xae>
 52a:	08 95       	ret
 52c:	80 e0       	ldi	r24, 0x00	; 0
 52e:	08 95       	ret

00000530 <DIO_write_high_nibble>:
	}
}

void DIO_write_high_nibble(unsigned char port,unsigned char number)
{
	number<<=4;
 530:	62 95       	swap	r22
 532:	60 7f       	andi	r22, 0xF0	; 240
	switch(port)
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	fc 01       	movw	r30, r24
 538:	e1 54       	subi	r30, 0x41	; 65
 53a:	f1 09       	sbc	r31, r1
 53c:	e4 32       	cpi	r30, 0x24	; 36
 53e:	f1 05       	cpc	r31, r1
 540:	f8 f4       	brcc	.+62     	; 0x580 <DIO_write_high_nibble+0x50>
 542:	e6 54       	subi	r30, 0x46	; 70
 544:	ff 4f       	sbci	r31, 0xFF	; 255
 546:	0c 94 c4 05 	jmp	0xb88	; 0xb88 <__tablejump2__>
	{
		case 'A':
		case 'a':
		PORTA&=0x0F;
 54a:	8b b3       	in	r24, 0x1b	; 27
 54c:	8f 70       	andi	r24, 0x0F	; 15
 54e:	8b bb       	out	0x1b, r24	; 27
		PORTA|=number;
 550:	8b b3       	in	r24, 0x1b	; 27
 552:	68 2b       	or	r22, r24
 554:	6b bb       	out	0x1b, r22	; 27
		break;
 556:	08 95       	ret
		case 'B':
		case 'b':
		PORTB&=0x0F;
 558:	88 b3       	in	r24, 0x18	; 24
 55a:	8f 70       	andi	r24, 0x0F	; 15
 55c:	88 bb       	out	0x18, r24	; 24
		PORTB|=number;
 55e:	88 b3       	in	r24, 0x18	; 24
 560:	68 2b       	or	r22, r24
 562:	68 bb       	out	0x18, r22	; 24
		break;
 564:	08 95       	ret
		case 'C':
		case 'c':
		PORTC&=0x0F;
 566:	85 b3       	in	r24, 0x15	; 21
 568:	8f 70       	andi	r24, 0x0F	; 15
 56a:	85 bb       	out	0x15, r24	; 21
		PORTC|=number;
 56c:	85 b3       	in	r24, 0x15	; 21
 56e:	68 2b       	or	r22, r24
 570:	65 bb       	out	0x15, r22	; 21
		break;
 572:	08 95       	ret
		case 'D':
		case 'd':
		PORTD&=0x0F;
 574:	82 b3       	in	r24, 0x12	; 18
 576:	8f 70       	andi	r24, 0x0F	; 15
 578:	82 bb       	out	0x12, r24	; 18
		PORTD|=number;
 57a:	82 b3       	in	r24, 0x12	; 18
 57c:	68 2b       	or	r22, r24
 57e:	62 bb       	out	0x12, r22	; 18
 580:	08 95       	ret

00000582 <enable>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 582:	41 e0       	ldi	r20, 0x01	; 1
 584:	60 e0       	ldi	r22, 0x00	; 0
 586:	82 e4       	ldi	r24, 0x42	; 66
 588:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write_pin>
 58c:	8f e9       	ldi	r24, 0x9F	; 159
 58e:	9f e0       	ldi	r25, 0x0F	; 15
 590:	01 97       	sbiw	r24, 0x01	; 1
 592:	f1 f7       	brne	.-4      	; 0x590 <enable+0xe>
 594:	00 c0       	rjmp	.+0      	; 0x596 <enable+0x14>
 596:	00 00       	nop
 598:	40 e0       	ldi	r20, 0x00	; 0
 59a:	60 e0       	ldi	r22, 0x00	; 0
 59c:	82 e4       	ldi	r24, 0x42	; 66
 59e:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write_pin>
 5a2:	8f e9       	ldi	r24, 0x9F	; 159
 5a4:	9f e0       	ldi	r25, 0x0F	; 15
 5a6:	01 97       	sbiw	r24, 0x01	; 1
 5a8:	f1 f7       	brne	.-4      	; 0x5a6 <enable+0x24>
 5aa:	00 c0       	rjmp	.+0      	; 0x5ac <enable+0x2a>
 5ac:	00 00       	nop
 5ae:	08 95       	ret

000005b0 <LCD_send_cmd>:
 5b0:	cf 93       	push	r28
 5b2:	c8 2f       	mov	r28, r24
 5b4:	40 e0       	ldi	r20, 0x00	; 0
 5b6:	62 e0       	ldi	r22, 0x02	; 2
 5b8:	82 e4       	ldi	r24, 0x42	; 66
 5ba:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write_pin>
 5be:	6c 2f       	mov	r22, r28
 5c0:	62 95       	swap	r22
 5c2:	6f 70       	andi	r22, 0x0F	; 15
 5c4:	81 e4       	ldi	r24, 0x41	; 65
 5c6:	0e 94 98 02 	call	0x530	; 0x530 <DIO_write_high_nibble>
 5ca:	0e 94 c1 02 	call	0x582	; 0x582 <enable>
 5ce:	6c 2f       	mov	r22, r28
 5d0:	81 e4       	ldi	r24, 0x41	; 65
 5d2:	0e 94 98 02 	call	0x530	; 0x530 <DIO_write_high_nibble>
 5d6:	0e 94 c1 02 	call	0x582	; 0x582 <enable>
 5da:	8f ec       	ldi	r24, 0xCF	; 207
 5dc:	97 e0       	ldi	r25, 0x07	; 7
 5de:	01 97       	sbiw	r24, 0x01	; 1
 5e0:	f1 f7       	brne	.-4      	; 0x5de <LCD_send_cmd+0x2e>
 5e2:	00 c0       	rjmp	.+0      	; 0x5e4 <LCD_send_cmd+0x34>
 5e4:	00 00       	nop
 5e6:	cf 91       	pop	r28
 5e8:	08 95       	ret

000005ea <LCD_init>:
 5ea:	2f ef       	ldi	r18, 0xFF	; 255
 5ec:	81 ee       	ldi	r24, 0xE1	; 225
 5ee:	94 e0       	ldi	r25, 0x04	; 4
 5f0:	21 50       	subi	r18, 0x01	; 1
 5f2:	80 40       	sbci	r24, 0x00	; 0
 5f4:	90 40       	sbci	r25, 0x00	; 0
 5f6:	e1 f7       	brne	.-8      	; 0x5f0 <LCD_init+0x6>
 5f8:	00 c0       	rjmp	.+0      	; 0x5fa <LCD_init+0x10>
 5fa:	00 00       	nop
 5fc:	41 e0       	ldi	r20, 0x01	; 1
 5fe:	64 e0       	ldi	r22, 0x04	; 4
 600:	81 e4       	ldi	r24, 0x41	; 65
 602:	0e 94 23 01 	call	0x246	; 0x246 <DIO_set_pin_dir>
 606:	41 e0       	ldi	r20, 0x01	; 1
 608:	65 e0       	ldi	r22, 0x05	; 5
 60a:	81 e4       	ldi	r24, 0x41	; 65
 60c:	0e 94 23 01 	call	0x246	; 0x246 <DIO_set_pin_dir>
 610:	41 e0       	ldi	r20, 0x01	; 1
 612:	66 e0       	ldi	r22, 0x06	; 6
 614:	81 e4       	ldi	r24, 0x41	; 65
 616:	0e 94 23 01 	call	0x246	; 0x246 <DIO_set_pin_dir>
 61a:	41 e0       	ldi	r20, 0x01	; 1
 61c:	67 e0       	ldi	r22, 0x07	; 7
 61e:	81 e4       	ldi	r24, 0x41	; 65
 620:	0e 94 23 01 	call	0x246	; 0x246 <DIO_set_pin_dir>
 624:	41 e0       	ldi	r20, 0x01	; 1
 626:	60 e0       	ldi	r22, 0x00	; 0
 628:	82 e4       	ldi	r24, 0x42	; 66
 62a:	0e 94 23 01 	call	0x246	; 0x246 <DIO_set_pin_dir>
 62e:	41 e0       	ldi	r20, 0x01	; 1
 630:	61 e0       	ldi	r22, 0x01	; 1
 632:	82 e4       	ldi	r24, 0x42	; 66
 634:	0e 94 23 01 	call	0x246	; 0x246 <DIO_set_pin_dir>
 638:	41 e0       	ldi	r20, 0x01	; 1
 63a:	62 e0       	ldi	r22, 0x02	; 2
 63c:	82 e4       	ldi	r24, 0x42	; 66
 63e:	0e 94 23 01 	call	0x246	; 0x246 <DIO_set_pin_dir>
 642:	40 e0       	ldi	r20, 0x00	; 0
 644:	61 e0       	ldi	r22, 0x01	; 1
 646:	82 e4       	ldi	r24, 0x42	; 66
 648:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write_pin>
 64c:	82 e0       	ldi	r24, 0x02	; 2
 64e:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <LCD_send_cmd>
 652:	8f e1       	ldi	r24, 0x1F	; 31
 654:	9e e4       	ldi	r25, 0x4E	; 78
 656:	01 97       	sbiw	r24, 0x01	; 1
 658:	f1 f7       	brne	.-4      	; 0x656 <LCD_init+0x6c>
 65a:	00 c0       	rjmp	.+0      	; 0x65c <LCD_init+0x72>
 65c:	00 00       	nop
 65e:	88 e2       	ldi	r24, 0x28	; 40
 660:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <LCD_send_cmd>
 664:	8f ec       	ldi	r24, 0xCF	; 207
 666:	97 e0       	ldi	r25, 0x07	; 7
 668:	01 97       	sbiw	r24, 0x01	; 1
 66a:	f1 f7       	brne	.-4      	; 0x668 <LCD_init+0x7e>
 66c:	00 c0       	rjmp	.+0      	; 0x66e <LCD_init+0x84>
 66e:	00 00       	nop
 670:	81 e0       	ldi	r24, 0x01	; 1
 672:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <LCD_send_cmd>
 676:	8f e1       	ldi	r24, 0x1F	; 31
 678:	9e e4       	ldi	r25, 0x4E	; 78
 67a:	01 97       	sbiw	r24, 0x01	; 1
 67c:	f1 f7       	brne	.-4      	; 0x67a <LCD_init+0x90>
 67e:	00 c0       	rjmp	.+0      	; 0x680 <LCD_init+0x96>
 680:	00 00       	nop
 682:	8c e0       	ldi	r24, 0x0C	; 12
 684:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <LCD_send_cmd>
 688:	8f ec       	ldi	r24, 0xCF	; 207
 68a:	97 e0       	ldi	r25, 0x07	; 7
 68c:	01 97       	sbiw	r24, 0x01	; 1
 68e:	f1 f7       	brne	.-4      	; 0x68c <LCD_init+0xa2>
 690:	00 c0       	rjmp	.+0      	; 0x692 <LCD_init+0xa8>
 692:	00 00       	nop
 694:	86 e0       	ldi	r24, 0x06	; 6
 696:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <LCD_send_cmd>
 69a:	8f ec       	ldi	r24, 0xCF	; 207
 69c:	97 e0       	ldi	r25, 0x07	; 7
 69e:	01 97       	sbiw	r24, 0x01	; 1
 6a0:	f1 f7       	brne	.-4      	; 0x69e <LCD_init+0xb4>
 6a2:	00 c0       	rjmp	.+0      	; 0x6a4 <LCD_init+0xba>
 6a4:	00 00       	nop
 6a6:	08 95       	ret

000006a8 <LCD_send_data>:
 6a8:	cf 93       	push	r28
 6aa:	c8 2f       	mov	r28, r24
 6ac:	41 e0       	ldi	r20, 0x01	; 1
 6ae:	62 e0       	ldi	r22, 0x02	; 2
 6b0:	82 e4       	ldi	r24, 0x42	; 66
 6b2:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write_pin>
 6b6:	6c 2f       	mov	r22, r28
 6b8:	62 95       	swap	r22
 6ba:	6f 70       	andi	r22, 0x0F	; 15
 6bc:	81 e4       	ldi	r24, 0x41	; 65
 6be:	0e 94 98 02 	call	0x530	; 0x530 <DIO_write_high_nibble>
 6c2:	0e 94 c1 02 	call	0x582	; 0x582 <enable>
 6c6:	6c 2f       	mov	r22, r28
 6c8:	81 e4       	ldi	r24, 0x41	; 65
 6ca:	0e 94 98 02 	call	0x530	; 0x530 <DIO_write_high_nibble>
 6ce:	0e 94 c1 02 	call	0x582	; 0x582 <enable>
 6d2:	cf 91       	pop	r28
 6d4:	08 95       	ret

000006d6 <LCD_send_string>:
 6d6:	cf 93       	push	r28
 6d8:	df 93       	push	r29
 6da:	ec 01       	movw	r28, r24
 6dc:	03 c0       	rjmp	.+6      	; 0x6e4 <LCD_send_string+0xe>
 6de:	0e 94 54 03 	call	0x6a8	; 0x6a8 <LCD_send_data>
 6e2:	21 96       	adiw	r28, 0x01	; 1
 6e4:	88 81       	ld	r24, Y
 6e6:	81 11       	cpse	r24, r1
 6e8:	fa cf       	rjmp	.-12     	; 0x6de <LCD_send_string+0x8>
 6ea:	df 91       	pop	r29
 6ec:	cf 91       	pop	r28
 6ee:	08 95       	ret

000006f0 <LCD_move_cursor>:
}

void LCD_move_cursor(char row,char coloum)
{
	char data=0;
	if (row>2 || row<1 || coloum>16 || coloum<1)
 6f0:	9f ef       	ldi	r25, 0xFF	; 255
 6f2:	98 0f       	add	r25, r24
 6f4:	92 30       	cpi	r25, 0x02	; 2
 6f6:	70 f4       	brcc	.+28     	; 0x714 <LCD_move_cursor+0x24>
 6f8:	61 31       	cpi	r22, 0x11	; 17
 6fa:	70 f4       	brcc	.+28     	; 0x718 <LCD_move_cursor+0x28>
 6fc:	66 23       	and	r22, r22
 6fe:	71 f0       	breq	.+28     	; 0x71c <LCD_move_cursor+0x2c>
	{
		data=0x80;
	}
	else if (row==1)
 700:	81 30       	cpi	r24, 0x01	; 1
 702:	19 f4       	brne	.+6      	; 0x70a <LCD_move_cursor+0x1a>
	{
		data=(0x80+coloum-1);
 704:	8f e7       	ldi	r24, 0x7F	; 127
 706:	86 0f       	add	r24, r22
 708:	0c c0       	rjmp	.+24     	; 0x722 <LCD_move_cursor+0x32>
	}
	else if (row==2)
 70a:	82 30       	cpi	r24, 0x02	; 2
 70c:	49 f4       	brne	.+18     	; 0x720 <LCD_move_cursor+0x30>
	{
		data=(0xC0+coloum-1);
 70e:	8f eb       	ldi	r24, 0xBF	; 191
 710:	86 0f       	add	r24, r22
 712:	07 c0       	rjmp	.+14     	; 0x722 <LCD_move_cursor+0x32>
void LCD_move_cursor(char row,char coloum)
{
	char data=0;
	if (row>2 || row<1 || coloum>16 || coloum<1)
	{
		data=0x80;
 714:	80 e8       	ldi	r24, 0x80	; 128
 716:	05 c0       	rjmp	.+10     	; 0x722 <LCD_move_cursor+0x32>
 718:	80 e8       	ldi	r24, 0x80	; 128
 71a:	03 c0       	rjmp	.+6      	; 0x722 <LCD_move_cursor+0x32>
 71c:	80 e8       	ldi	r24, 0x80	; 128
 71e:	01 c0       	rjmp	.+2      	; 0x722 <LCD_move_cursor+0x32>
	_delay_ms(10);
}

void LCD_move_cursor(char row,char coloum)
{
	char data=0;
 720:	80 e0       	ldi	r24, 0x00	; 0
	}
	else if (row==2)
	{
		data=(0xC0+coloum-1);
	}
	LCD_send_cmd(data);
 722:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <LCD_send_cmd>
 726:	8f ec       	ldi	r24, 0xCF	; 207
 728:	97 e0       	ldi	r25, 0x07	; 7
 72a:	01 97       	sbiw	r24, 0x01	; 1
 72c:	f1 f7       	brne	.-4      	; 0x72a <LCD_move_cursor+0x3a>
 72e:	00 c0       	rjmp	.+0      	; 0x730 <LCD_move_cursor+0x40>
 730:	00 00       	nop
 732:	08 95       	ret

00000734 <LED_init>:
#include "LED.h"
#include "DIO.h"

void LED_init(unsigned char port,unsigned char pin_number)
{
	DIO_set_pin_dir(port,pin_number,1);
 734:	41 e0       	ldi	r20, 0x01	; 1
 736:	0e 94 23 01 	call	0x246	; 0x246 <DIO_set_pin_dir>
 73a:	08 95       	ret

0000073c <LED_turn_on>:
}

void LED_turn_on(unsigned char port,unsigned char pin_number)
{
	DIO_write_pin(port,pin_number,1);
 73c:	41 e0       	ldi	r20, 0x01	; 1
 73e:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write_pin>
 742:	08 95       	ret

00000744 <LED_turn_off>:
}

void LED_turn_off(unsigned char port,unsigned char pin_number)
{
	DIO_write_pin(port,pin_number,0);
 744:	40 e0       	ldi	r20, 0x00	; 0
 746:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write_pin>
 74a:	08 95       	ret

0000074c <LED_toggle>:
}

void LED_toggle(unsigned char port,unsigned char pin_number)
{
	DIO_toggle_pin(port,pin_number);
 74c:	0e 94 03 02 	call	0x406	; 0x406 <DIO_toggle_pin>
 750:	08 95       	ret

00000752 <main>:
char read_val;
unsigned short temperatue;

int main(void)
{
	LCD_init();
 752:	0e 94 f5 02 	call	0x5ea	; 0x5ea <LCD_init>
	ADC_init();
 756:	0e 94 fd 00 	call	0x1fa	; 0x1fa <ADC_init>
	LED_init('C',0);
 75a:	60 e0       	ldi	r22, 0x00	; 0
 75c:	83 e4       	ldi	r24, 0x43	; 67
 75e:	0e 94 9a 03 	call	0x734	; 0x734 <LED_init>
	LED_init('C',1);
 762:	61 e0       	ldi	r22, 0x01	; 1
 764:	83 e4       	ldi	r24, 0x43	; 67
 766:	0e 94 9a 03 	call	0x734	; 0x734 <LED_init>
	LED_init('D',0);
 76a:	60 e0       	ldi	r22, 0x00	; 0
 76c:	84 e4       	ldi	r24, 0x44	; 68
 76e:	0e 94 9a 03 	call	0x734	; 0x734 <LED_init>
	LED_init('D',1);		
 772:	61 e0       	ldi	r22, 0x01	; 1
 774:	84 e4       	ldi	r24, 0x44	; 68
 776:	0e 94 9a 03 	call	0x734	; 0x734 <LED_init>
	BUTTON_init('D',2);
 77a:	62 e0       	ldi	r22, 0x02	; 2
 77c:	84 e4       	ldi	r24, 0x44	; 68
 77e:	0e 94 1c 01 	call	0x238	; 0x238 <BUTTON_init>
	BUTTON_init('D',3);	
 782:	63 e0       	ldi	r22, 0x03	; 3
 784:	84 e4       	ldi	r24, 0x44	; 68
 786:	0e 94 1c 01 	call	0x238	; 0x238 <BUTTON_init>
	char led_value=0;
	LCD_send_string("temperature=");
 78a:	80 e6       	ldi	r24, 0x60	; 96
 78c:	90 e0       	ldi	r25, 0x00	; 0
 78e:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <LCD_send_string>
	LED_init('C',1);
	LED_init('D',0);
	LED_init('D',1);		
	BUTTON_init('D',2);
	BUTTON_init('D',3);	
	char led_value=0;
 792:	c0 e0       	ldi	r28, 0x00	; 0
	LCD_send_string("temperature=");
	
	while(1)
	{
		if((1==BUTTON_read('D',2)) && (led_value==0))
 794:	62 e0       	ldi	r22, 0x02	; 2
 796:	84 e4       	ldi	r24, 0x44	; 68
 798:	0e 94 20 01 	call	0x240	; 0x240 <BUTTON_read>
 79c:	81 30       	cpi	r24, 0x01	; 1
 79e:	41 f4       	brne	.+16     	; 0x7b0 <main+0x5e>
 7a0:	c1 11       	cpse	r28, r1
 7a2:	06 c0       	rjmp	.+12     	; 0x7b0 <main+0x5e>
		{
			LED_toggle('C',0);
 7a4:	60 e0       	ldi	r22, 0x00	; 0
 7a6:	83 e4       	ldi	r24, 0x43	; 67
 7a8:	0e 94 a6 03 	call	0x74c	; 0x74c <LED_toggle>
			led_value=1;
 7ac:	c1 e0       	ldi	r28, 0x01	; 1
 7ae:	07 c0       	rjmp	.+14     	; 0x7be <main+0x6c>
		}
		else if(0==BUTTON_read('D',2))
 7b0:	62 e0       	ldi	r22, 0x02	; 2
 7b2:	84 e4       	ldi	r24, 0x44	; 68
 7b4:	0e 94 20 01 	call	0x240	; 0x240 <BUTTON_read>
 7b8:	81 11       	cpse	r24, r1
 7ba:	01 c0       	rjmp	.+2      	; 0x7be <main+0x6c>
		{
			led_value=0;
 7bc:	c0 e0       	ldi	r28, 0x00	; 0
			
		}
		

		
		if(1==BUTTON_read('D',3))
 7be:	63 e0       	ldi	r22, 0x03	; 3
 7c0:	84 e4       	ldi	r24, 0x44	; 68
 7c2:	0e 94 20 01 	call	0x240	; 0x240 <BUTTON_read>
 7c6:	81 30       	cpi	r24, 0x01	; 1
 7c8:	71 f4       	brne	.+28     	; 0x7e6 <main+0x94>
		{
			LED_turn_on('C',1);
 7ca:	61 e0       	ldi	r22, 0x01	; 1
 7cc:	83 e4       	ldi	r24, 0x43	; 67
 7ce:	0e 94 9e 03 	call	0x73c	; 0x73c <LED_turn_on>
 7d2:	2f ef       	ldi	r18, 0xFF	; 255
 7d4:	34 e3       	ldi	r19, 0x34	; 52
 7d6:	8c e0       	ldi	r24, 0x0C	; 12
 7d8:	21 50       	subi	r18, 0x01	; 1
 7da:	30 40       	sbci	r19, 0x00	; 0
 7dc:	80 40       	sbci	r24, 0x00	; 0
 7de:	e1 f7       	brne	.-8      	; 0x7d8 <main+0x86>
 7e0:	00 c0       	rjmp	.+0      	; 0x7e2 <main+0x90>
 7e2:	00 00       	nop
 7e4:	04 c0       	rjmp	.+8      	; 0x7ee <main+0x9c>
			_delay_ms(500);
		}
		else
		{
			LED_turn_off('C',1);
 7e6:	61 e0       	ldi	r22, 0x01	; 1
 7e8:	83 e4       	ldi	r24, 0x43	; 67
 7ea:	0e 94 a2 03 	call	0x744	; 0x744 <LED_turn_off>
		}		
		
		
		
		
		temperatue=(ADC_u16Read()*0.25);
 7ee:	0e 94 0d 01 	call	0x21a	; 0x21a <ADC_u16Read>
 7f2:	bc 01       	movw	r22, r24
 7f4:	80 e0       	ldi	r24, 0x00	; 0
 7f6:	90 e0       	ldi	r25, 0x00	; 0
 7f8:	0e 94 c9 04 	call	0x992	; 0x992 <__floatunsisf>
 7fc:	20 e0       	ldi	r18, 0x00	; 0
 7fe:	30 e0       	ldi	r19, 0x00	; 0
 800:	40 e8       	ldi	r20, 0x80	; 128
 802:	5e e3       	ldi	r21, 0x3E	; 62
 804:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__mulsf3>
 808:	0e 94 9a 04 	call	0x934	; 0x934 <__fixunssfsi>
 80c:	70 93 6f 00 	sts	0x006F, r23	; 0x80006f <__data_end+0x1>
 810:	60 93 6e 00 	sts	0x006E, r22	; 0x80006e <__data_end>
		
		if(temperatue<10)
 814:	6a 30       	cpi	r22, 0x0A	; 10
 816:	71 05       	cpc	r23, r1
 818:	78 f5       	brcc	.+94     	; 0x878 <__stack+0x19>
		{
			LCD_move_cursor(1,13);
 81a:	6d e0       	ldi	r22, 0x0D	; 13
 81c:	81 e0       	ldi	r24, 0x01	; 1
 81e:	0e 94 78 03 	call	0x6f0	; 0x6f0 <LCD_move_cursor>
			LCD_send_data(0x30);
 822:	80 e3       	ldi	r24, 0x30	; 48
 824:	0e 94 54 03 	call	0x6a8	; 0x6a8 <LCD_send_data>
			LCD_send_data((temperatue%10)+48);
 828:	40 91 6e 00 	lds	r20, 0x006E	; 0x80006e <__data_end>
 82c:	50 91 6f 00 	lds	r21, 0x006F	; 0x80006f <__data_end+0x1>
 830:	9a 01       	movw	r18, r20
 832:	ad ec       	ldi	r26, 0xCD	; 205
 834:	bc ec       	ldi	r27, 0xCC	; 204
 836:	0e 94 ca 05 	call	0xb94	; 0xb94 <__umulhisi3>
 83a:	96 95       	lsr	r25
 83c:	87 95       	ror	r24
 83e:	96 95       	lsr	r25
 840:	87 95       	ror	r24
 842:	96 95       	lsr	r25
 844:	87 95       	ror	r24
 846:	9c 01       	movw	r18, r24
 848:	22 0f       	add	r18, r18
 84a:	33 1f       	adc	r19, r19
 84c:	88 0f       	add	r24, r24
 84e:	99 1f       	adc	r25, r25
 850:	88 0f       	add	r24, r24
 852:	99 1f       	adc	r25, r25
 854:	88 0f       	add	r24, r24
 856:	99 1f       	adc	r25, r25
 858:	82 0f       	add	r24, r18
 85a:	93 1f       	adc	r25, r19
 85c:	9a 01       	movw	r18, r20
 85e:	28 1b       	sub	r18, r24
 860:	39 0b       	sbc	r19, r25
 862:	c9 01       	movw	r24, r18
 864:	80 5d       	subi	r24, 0xD0	; 208
 866:	0e 94 54 03 	call	0x6a8	; 0x6a8 <LCD_send_data>
			LCD_send_data(0xDF);
 86a:	8f ed       	ldi	r24, 0xDF	; 223
 86c:	0e 94 54 03 	call	0x6a8	; 0x6a8 <LCD_send_data>
			LCD_send_data(0x43);
 870:	83 e4       	ldi	r24, 0x43	; 67
 872:	0e 94 54 03 	call	0x6a8	; 0x6a8 <LCD_send_data>
 876:	3f c0       	rjmp	.+126    	; 0x8f6 <__stack+0x97>
			
		}
		else if( temperatue<100)
 878:	64 36       	cpi	r22, 0x64	; 100
 87a:	71 05       	cpc	r23, r1
 87c:	e0 f5       	brcc	.+120    	; 0x8f6 <__stack+0x97>
		{
			LCD_move_cursor(1,13);
 87e:	6d e0       	ldi	r22, 0x0D	; 13
 880:	81 e0       	ldi	r24, 0x01	; 1
 882:	0e 94 78 03 	call	0x6f0	; 0x6f0 <LCD_move_cursor>
			LCD_send_data((temperatue/10)+48);
 886:	20 91 6e 00 	lds	r18, 0x006E	; 0x80006e <__data_end>
 88a:	30 91 6f 00 	lds	r19, 0x006F	; 0x80006f <__data_end+0x1>
 88e:	ad ec       	ldi	r26, 0xCD	; 205
 890:	bc ec       	ldi	r27, 0xCC	; 204
 892:	0e 94 ca 05 	call	0xb94	; 0xb94 <__umulhisi3>
 896:	96 95       	lsr	r25
 898:	87 95       	ror	r24
 89a:	96 95       	lsr	r25
 89c:	87 95       	ror	r24
 89e:	96 95       	lsr	r25
 8a0:	87 95       	ror	r24
 8a2:	80 5d       	subi	r24, 0xD0	; 208
 8a4:	0e 94 54 03 	call	0x6a8	; 0x6a8 <LCD_send_data>
			LCD_send_data((temperatue%10)+48);
 8a8:	40 91 6e 00 	lds	r20, 0x006E	; 0x80006e <__data_end>
 8ac:	50 91 6f 00 	lds	r21, 0x006F	; 0x80006f <__data_end+0x1>
 8b0:	9a 01       	movw	r18, r20
 8b2:	ad ec       	ldi	r26, 0xCD	; 205
 8b4:	bc ec       	ldi	r27, 0xCC	; 204
 8b6:	0e 94 ca 05 	call	0xb94	; 0xb94 <__umulhisi3>
 8ba:	96 95       	lsr	r25
 8bc:	87 95       	ror	r24
 8be:	96 95       	lsr	r25
 8c0:	87 95       	ror	r24
 8c2:	96 95       	lsr	r25
 8c4:	87 95       	ror	r24
 8c6:	9c 01       	movw	r18, r24
 8c8:	22 0f       	add	r18, r18
 8ca:	33 1f       	adc	r19, r19
 8cc:	88 0f       	add	r24, r24
 8ce:	99 1f       	adc	r25, r25
 8d0:	88 0f       	add	r24, r24
 8d2:	99 1f       	adc	r25, r25
 8d4:	88 0f       	add	r24, r24
 8d6:	99 1f       	adc	r25, r25
 8d8:	82 0f       	add	r24, r18
 8da:	93 1f       	adc	r25, r19
 8dc:	9a 01       	movw	r18, r20
 8de:	28 1b       	sub	r18, r24
 8e0:	39 0b       	sbc	r19, r25
 8e2:	c9 01       	movw	r24, r18
 8e4:	80 5d       	subi	r24, 0xD0	; 208
 8e6:	0e 94 54 03 	call	0x6a8	; 0x6a8 <LCD_send_data>
			LCD_send_data(0XDF);
 8ea:	8f ed       	ldi	r24, 0xDF	; 223
 8ec:	0e 94 54 03 	call	0x6a8	; 0x6a8 <LCD_send_data>
			LCD_send_data(0X43);			
 8f0:	83 e4       	ldi	r24, 0x43	; 67
 8f2:	0e 94 54 03 	call	0x6a8	; 0x6a8 <LCD_send_data>
		{
			
		}
		
		
		if(temperatue<30)
 8f6:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__data_end>
 8fa:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <__data_end+0x1>
 8fe:	4e 97       	sbiw	r24, 0x1e	; 30
 900:	28 f4       	brcc	.+10     	; 0x90c <__stack+0xad>
		{
			LED_turn_on('D',1);
 902:	61 e0       	ldi	r22, 0x01	; 1
 904:	84 e4       	ldi	r24, 0x44	; 68
 906:	0e 94 9e 03 	call	0x73c	; 0x73c <LED_turn_on>
 90a:	04 c0       	rjmp	.+8      	; 0x914 <__stack+0xb5>
		}
			else
		{
			LED_turn_off('D',1);
 90c:	61 e0       	ldi	r22, 0x01	; 1
 90e:	84 e4       	ldi	r24, 0x44	; 68
 910:	0e 94 a2 03 	call	0x744	; 0x744 <LED_turn_off>
		}
						
		if (temperatue>=30)
 914:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__data_end>
 918:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <__data_end+0x1>
 91c:	4e 97       	sbiw	r24, 0x1e	; 30
 91e:	28 f0       	brcs	.+10     	; 0x92a <__stack+0xcb>
		{
			LED_turn_on('D',0);
 920:	60 e0       	ldi	r22, 0x00	; 0
 922:	84 e4       	ldi	r24, 0x44	; 68
 924:	0e 94 9e 03 	call	0x73c	; 0x73c <LED_turn_on>
 928:	35 cf       	rjmp	.-406    	; 0x794 <main+0x42>
		}
		else
		{
			LED_turn_off('D',0);
 92a:	60 e0       	ldi	r22, 0x00	; 0
 92c:	84 e4       	ldi	r24, 0x44	; 68
 92e:	0e 94 a2 03 	call	0x744	; 0x744 <LED_turn_off>
 932:	30 cf       	rjmp	.-416    	; 0x794 <main+0x42>

00000934 <__fixunssfsi>:
 934:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__fp_splitA>
 938:	88 f0       	brcs	.+34     	; 0x95c <__fixunssfsi+0x28>
 93a:	9f 57       	subi	r25, 0x7F	; 127
 93c:	98 f0       	brcs	.+38     	; 0x964 <__fixunssfsi+0x30>
 93e:	b9 2f       	mov	r27, r25
 940:	99 27       	eor	r25, r25
 942:	b7 51       	subi	r27, 0x17	; 23
 944:	b0 f0       	brcs	.+44     	; 0x972 <__fixunssfsi+0x3e>
 946:	e1 f0       	breq	.+56     	; 0x980 <__fixunssfsi+0x4c>
 948:	66 0f       	add	r22, r22
 94a:	77 1f       	adc	r23, r23
 94c:	88 1f       	adc	r24, r24
 94e:	99 1f       	adc	r25, r25
 950:	1a f0       	brmi	.+6      	; 0x958 <__fixunssfsi+0x24>
 952:	ba 95       	dec	r27
 954:	c9 f7       	brne	.-14     	; 0x948 <__fixunssfsi+0x14>
 956:	14 c0       	rjmp	.+40     	; 0x980 <__fixunssfsi+0x4c>
 958:	b1 30       	cpi	r27, 0x01	; 1
 95a:	91 f0       	breq	.+36     	; 0x980 <__fixunssfsi+0x4c>
 95c:	0e 94 28 05 	call	0xa50	; 0xa50 <__fp_zero>
 960:	b1 e0       	ldi	r27, 0x01	; 1
 962:	08 95       	ret
 964:	0c 94 28 05 	jmp	0xa50	; 0xa50 <__fp_zero>
 968:	67 2f       	mov	r22, r23
 96a:	78 2f       	mov	r23, r24
 96c:	88 27       	eor	r24, r24
 96e:	b8 5f       	subi	r27, 0xF8	; 248
 970:	39 f0       	breq	.+14     	; 0x980 <__fixunssfsi+0x4c>
 972:	b9 3f       	cpi	r27, 0xF9	; 249
 974:	cc f3       	brlt	.-14     	; 0x968 <__fixunssfsi+0x34>
 976:	86 95       	lsr	r24
 978:	77 95       	ror	r23
 97a:	67 95       	ror	r22
 97c:	b3 95       	inc	r27
 97e:	d9 f7       	brne	.-10     	; 0x976 <__fixunssfsi+0x42>
 980:	3e f4       	brtc	.+14     	; 0x990 <__fixunssfsi+0x5c>
 982:	90 95       	com	r25
 984:	80 95       	com	r24
 986:	70 95       	com	r23
 988:	61 95       	neg	r22
 98a:	7f 4f       	sbci	r23, 0xFF	; 255
 98c:	8f 4f       	sbci	r24, 0xFF	; 255
 98e:	9f 4f       	sbci	r25, 0xFF	; 255
 990:	08 95       	ret

00000992 <__floatunsisf>:
 992:	e8 94       	clt
 994:	09 c0       	rjmp	.+18     	; 0x9a8 <__floatsisf+0x12>

00000996 <__floatsisf>:
 996:	97 fb       	bst	r25, 7
 998:	3e f4       	brtc	.+14     	; 0x9a8 <__floatsisf+0x12>
 99a:	90 95       	com	r25
 99c:	80 95       	com	r24
 99e:	70 95       	com	r23
 9a0:	61 95       	neg	r22
 9a2:	7f 4f       	sbci	r23, 0xFF	; 255
 9a4:	8f 4f       	sbci	r24, 0xFF	; 255
 9a6:	9f 4f       	sbci	r25, 0xFF	; 255
 9a8:	99 23       	and	r25, r25
 9aa:	a9 f0       	breq	.+42     	; 0x9d6 <__floatsisf+0x40>
 9ac:	f9 2f       	mov	r31, r25
 9ae:	96 e9       	ldi	r25, 0x96	; 150
 9b0:	bb 27       	eor	r27, r27
 9b2:	93 95       	inc	r25
 9b4:	f6 95       	lsr	r31
 9b6:	87 95       	ror	r24
 9b8:	77 95       	ror	r23
 9ba:	67 95       	ror	r22
 9bc:	b7 95       	ror	r27
 9be:	f1 11       	cpse	r31, r1
 9c0:	f8 cf       	rjmp	.-16     	; 0x9b2 <__floatsisf+0x1c>
 9c2:	fa f4       	brpl	.+62     	; 0xa02 <__floatsisf+0x6c>
 9c4:	bb 0f       	add	r27, r27
 9c6:	11 f4       	brne	.+4      	; 0x9cc <__floatsisf+0x36>
 9c8:	60 ff       	sbrs	r22, 0
 9ca:	1b c0       	rjmp	.+54     	; 0xa02 <__floatsisf+0x6c>
 9cc:	6f 5f       	subi	r22, 0xFF	; 255
 9ce:	7f 4f       	sbci	r23, 0xFF	; 255
 9d0:	8f 4f       	sbci	r24, 0xFF	; 255
 9d2:	9f 4f       	sbci	r25, 0xFF	; 255
 9d4:	16 c0       	rjmp	.+44     	; 0xa02 <__floatsisf+0x6c>
 9d6:	88 23       	and	r24, r24
 9d8:	11 f0       	breq	.+4      	; 0x9de <__floatsisf+0x48>
 9da:	96 e9       	ldi	r25, 0x96	; 150
 9dc:	11 c0       	rjmp	.+34     	; 0xa00 <__floatsisf+0x6a>
 9de:	77 23       	and	r23, r23
 9e0:	21 f0       	breq	.+8      	; 0x9ea <__floatsisf+0x54>
 9e2:	9e e8       	ldi	r25, 0x8E	; 142
 9e4:	87 2f       	mov	r24, r23
 9e6:	76 2f       	mov	r23, r22
 9e8:	05 c0       	rjmp	.+10     	; 0x9f4 <__floatsisf+0x5e>
 9ea:	66 23       	and	r22, r22
 9ec:	71 f0       	breq	.+28     	; 0xa0a <__floatsisf+0x74>
 9ee:	96 e8       	ldi	r25, 0x86	; 134
 9f0:	86 2f       	mov	r24, r22
 9f2:	70 e0       	ldi	r23, 0x00	; 0
 9f4:	60 e0       	ldi	r22, 0x00	; 0
 9f6:	2a f0       	brmi	.+10     	; 0xa02 <__floatsisf+0x6c>
 9f8:	9a 95       	dec	r25
 9fa:	66 0f       	add	r22, r22
 9fc:	77 1f       	adc	r23, r23
 9fe:	88 1f       	adc	r24, r24
 a00:	da f7       	brpl	.-10     	; 0x9f8 <__floatsisf+0x62>
 a02:	88 0f       	add	r24, r24
 a04:	96 95       	lsr	r25
 a06:	87 95       	ror	r24
 a08:	97 f9       	bld	r25, 7
 a0a:	08 95       	ret

00000a0c <__fp_split3>:
 a0c:	57 fd       	sbrc	r21, 7
 a0e:	90 58       	subi	r25, 0x80	; 128
 a10:	44 0f       	add	r20, r20
 a12:	55 1f       	adc	r21, r21
 a14:	59 f0       	breq	.+22     	; 0xa2c <__fp_splitA+0x10>
 a16:	5f 3f       	cpi	r21, 0xFF	; 255
 a18:	71 f0       	breq	.+28     	; 0xa36 <__fp_splitA+0x1a>
 a1a:	47 95       	ror	r20

00000a1c <__fp_splitA>:
 a1c:	88 0f       	add	r24, r24
 a1e:	97 fb       	bst	r25, 7
 a20:	99 1f       	adc	r25, r25
 a22:	61 f0       	breq	.+24     	; 0xa3c <__fp_splitA+0x20>
 a24:	9f 3f       	cpi	r25, 0xFF	; 255
 a26:	79 f0       	breq	.+30     	; 0xa46 <__fp_splitA+0x2a>
 a28:	87 95       	ror	r24
 a2a:	08 95       	ret
 a2c:	12 16       	cp	r1, r18
 a2e:	13 06       	cpc	r1, r19
 a30:	14 06       	cpc	r1, r20
 a32:	55 1f       	adc	r21, r21
 a34:	f2 cf       	rjmp	.-28     	; 0xa1a <__fp_split3+0xe>
 a36:	46 95       	lsr	r20
 a38:	f1 df       	rcall	.-30     	; 0xa1c <__fp_splitA>
 a3a:	08 c0       	rjmp	.+16     	; 0xa4c <__fp_splitA+0x30>
 a3c:	16 16       	cp	r1, r22
 a3e:	17 06       	cpc	r1, r23
 a40:	18 06       	cpc	r1, r24
 a42:	99 1f       	adc	r25, r25
 a44:	f1 cf       	rjmp	.-30     	; 0xa28 <__fp_splitA+0xc>
 a46:	86 95       	lsr	r24
 a48:	71 05       	cpc	r23, r1
 a4a:	61 05       	cpc	r22, r1
 a4c:	08 94       	sec
 a4e:	08 95       	ret

00000a50 <__fp_zero>:
 a50:	e8 94       	clt

00000a52 <__fp_szero>:
 a52:	bb 27       	eor	r27, r27
 a54:	66 27       	eor	r22, r22
 a56:	77 27       	eor	r23, r23
 a58:	cb 01       	movw	r24, r22
 a5a:	97 f9       	bld	r25, 7
 a5c:	08 95       	ret

00000a5e <__mulsf3>:
 a5e:	0e 94 42 05 	call	0xa84	; 0xa84 <__mulsf3x>
 a62:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__fp_round>
 a66:	0e 94 a5 05 	call	0xb4a	; 0xb4a <__fp_pscA>
 a6a:	38 f0       	brcs	.+14     	; 0xa7a <__mulsf3+0x1c>
 a6c:	0e 94 ac 05 	call	0xb58	; 0xb58 <__fp_pscB>
 a70:	20 f0       	brcs	.+8      	; 0xa7a <__mulsf3+0x1c>
 a72:	95 23       	and	r25, r21
 a74:	11 f0       	breq	.+4      	; 0xa7a <__mulsf3+0x1c>
 a76:	0c 94 9c 05 	jmp	0xb38	; 0xb38 <__fp_inf>
 a7a:	0c 94 a2 05 	jmp	0xb44	; 0xb44 <__fp_nan>
 a7e:	11 24       	eor	r1, r1
 a80:	0c 94 29 05 	jmp	0xa52	; 0xa52 <__fp_szero>

00000a84 <__mulsf3x>:
 a84:	0e 94 06 05 	call	0xa0c	; 0xa0c <__fp_split3>
 a88:	70 f3       	brcs	.-36     	; 0xa66 <__mulsf3+0x8>

00000a8a <__mulsf3_pse>:
 a8a:	95 9f       	mul	r25, r21
 a8c:	c1 f3       	breq	.-16     	; 0xa7e <__mulsf3+0x20>
 a8e:	95 0f       	add	r25, r21
 a90:	50 e0       	ldi	r21, 0x00	; 0
 a92:	55 1f       	adc	r21, r21
 a94:	62 9f       	mul	r22, r18
 a96:	f0 01       	movw	r30, r0
 a98:	72 9f       	mul	r23, r18
 a9a:	bb 27       	eor	r27, r27
 a9c:	f0 0d       	add	r31, r0
 a9e:	b1 1d       	adc	r27, r1
 aa0:	63 9f       	mul	r22, r19
 aa2:	aa 27       	eor	r26, r26
 aa4:	f0 0d       	add	r31, r0
 aa6:	b1 1d       	adc	r27, r1
 aa8:	aa 1f       	adc	r26, r26
 aaa:	64 9f       	mul	r22, r20
 aac:	66 27       	eor	r22, r22
 aae:	b0 0d       	add	r27, r0
 ab0:	a1 1d       	adc	r26, r1
 ab2:	66 1f       	adc	r22, r22
 ab4:	82 9f       	mul	r24, r18
 ab6:	22 27       	eor	r18, r18
 ab8:	b0 0d       	add	r27, r0
 aba:	a1 1d       	adc	r26, r1
 abc:	62 1f       	adc	r22, r18
 abe:	73 9f       	mul	r23, r19
 ac0:	b0 0d       	add	r27, r0
 ac2:	a1 1d       	adc	r26, r1
 ac4:	62 1f       	adc	r22, r18
 ac6:	83 9f       	mul	r24, r19
 ac8:	a0 0d       	add	r26, r0
 aca:	61 1d       	adc	r22, r1
 acc:	22 1f       	adc	r18, r18
 ace:	74 9f       	mul	r23, r20
 ad0:	33 27       	eor	r19, r19
 ad2:	a0 0d       	add	r26, r0
 ad4:	61 1d       	adc	r22, r1
 ad6:	23 1f       	adc	r18, r19
 ad8:	84 9f       	mul	r24, r20
 ada:	60 0d       	add	r22, r0
 adc:	21 1d       	adc	r18, r1
 ade:	82 2f       	mov	r24, r18
 ae0:	76 2f       	mov	r23, r22
 ae2:	6a 2f       	mov	r22, r26
 ae4:	11 24       	eor	r1, r1
 ae6:	9f 57       	subi	r25, 0x7F	; 127
 ae8:	50 40       	sbci	r21, 0x00	; 0
 aea:	9a f0       	brmi	.+38     	; 0xb12 <__mulsf3_pse+0x88>
 aec:	f1 f0       	breq	.+60     	; 0xb2a <__mulsf3_pse+0xa0>
 aee:	88 23       	and	r24, r24
 af0:	4a f0       	brmi	.+18     	; 0xb04 <__mulsf3_pse+0x7a>
 af2:	ee 0f       	add	r30, r30
 af4:	ff 1f       	adc	r31, r31
 af6:	bb 1f       	adc	r27, r27
 af8:	66 1f       	adc	r22, r22
 afa:	77 1f       	adc	r23, r23
 afc:	88 1f       	adc	r24, r24
 afe:	91 50       	subi	r25, 0x01	; 1
 b00:	50 40       	sbci	r21, 0x00	; 0
 b02:	a9 f7       	brne	.-22     	; 0xaee <__mulsf3_pse+0x64>
 b04:	9e 3f       	cpi	r25, 0xFE	; 254
 b06:	51 05       	cpc	r21, r1
 b08:	80 f0       	brcs	.+32     	; 0xb2a <__mulsf3_pse+0xa0>
 b0a:	0c 94 9c 05 	jmp	0xb38	; 0xb38 <__fp_inf>
 b0e:	0c 94 29 05 	jmp	0xa52	; 0xa52 <__fp_szero>
 b12:	5f 3f       	cpi	r21, 0xFF	; 255
 b14:	e4 f3       	brlt	.-8      	; 0xb0e <__mulsf3_pse+0x84>
 b16:	98 3e       	cpi	r25, 0xE8	; 232
 b18:	d4 f3       	brlt	.-12     	; 0xb0e <__mulsf3_pse+0x84>
 b1a:	86 95       	lsr	r24
 b1c:	77 95       	ror	r23
 b1e:	67 95       	ror	r22
 b20:	b7 95       	ror	r27
 b22:	f7 95       	ror	r31
 b24:	e7 95       	ror	r30
 b26:	9f 5f       	subi	r25, 0xFF	; 255
 b28:	c1 f7       	brne	.-16     	; 0xb1a <__mulsf3_pse+0x90>
 b2a:	fe 2b       	or	r31, r30
 b2c:	88 0f       	add	r24, r24
 b2e:	91 1d       	adc	r25, r1
 b30:	96 95       	lsr	r25
 b32:	87 95       	ror	r24
 b34:	97 f9       	bld	r25, 7
 b36:	08 95       	ret

00000b38 <__fp_inf>:
 b38:	97 f9       	bld	r25, 7
 b3a:	9f 67       	ori	r25, 0x7F	; 127
 b3c:	80 e8       	ldi	r24, 0x80	; 128
 b3e:	70 e0       	ldi	r23, 0x00	; 0
 b40:	60 e0       	ldi	r22, 0x00	; 0
 b42:	08 95       	ret

00000b44 <__fp_nan>:
 b44:	9f ef       	ldi	r25, 0xFF	; 255
 b46:	80 ec       	ldi	r24, 0xC0	; 192
 b48:	08 95       	ret

00000b4a <__fp_pscA>:
 b4a:	00 24       	eor	r0, r0
 b4c:	0a 94       	dec	r0
 b4e:	16 16       	cp	r1, r22
 b50:	17 06       	cpc	r1, r23
 b52:	18 06       	cpc	r1, r24
 b54:	09 06       	cpc	r0, r25
 b56:	08 95       	ret

00000b58 <__fp_pscB>:
 b58:	00 24       	eor	r0, r0
 b5a:	0a 94       	dec	r0
 b5c:	12 16       	cp	r1, r18
 b5e:	13 06       	cpc	r1, r19
 b60:	14 06       	cpc	r1, r20
 b62:	05 06       	cpc	r0, r21
 b64:	08 95       	ret

00000b66 <__fp_round>:
 b66:	09 2e       	mov	r0, r25
 b68:	03 94       	inc	r0
 b6a:	00 0c       	add	r0, r0
 b6c:	11 f4       	brne	.+4      	; 0xb72 <__fp_round+0xc>
 b6e:	88 23       	and	r24, r24
 b70:	52 f0       	brmi	.+20     	; 0xb86 <__fp_round+0x20>
 b72:	bb 0f       	add	r27, r27
 b74:	40 f4       	brcc	.+16     	; 0xb86 <__fp_round+0x20>
 b76:	bf 2b       	or	r27, r31
 b78:	11 f4       	brne	.+4      	; 0xb7e <__fp_round+0x18>
 b7a:	60 ff       	sbrs	r22, 0
 b7c:	04 c0       	rjmp	.+8      	; 0xb86 <__fp_round+0x20>
 b7e:	6f 5f       	subi	r22, 0xFF	; 255
 b80:	7f 4f       	sbci	r23, 0xFF	; 255
 b82:	8f 4f       	sbci	r24, 0xFF	; 255
 b84:	9f 4f       	sbci	r25, 0xFF	; 255
 b86:	08 95       	ret

00000b88 <__tablejump2__>:
 b88:	ee 0f       	add	r30, r30
 b8a:	ff 1f       	adc	r31, r31
 b8c:	05 90       	lpm	r0, Z+
 b8e:	f4 91       	lpm	r31, Z
 b90:	e0 2d       	mov	r30, r0
 b92:	09 94       	ijmp

00000b94 <__umulhisi3>:
 b94:	a2 9f       	mul	r26, r18
 b96:	b0 01       	movw	r22, r0
 b98:	b3 9f       	mul	r27, r19
 b9a:	c0 01       	movw	r24, r0
 b9c:	a3 9f       	mul	r26, r19
 b9e:	70 0d       	add	r23, r0
 ba0:	81 1d       	adc	r24, r1
 ba2:	11 24       	eor	r1, r1
 ba4:	91 1d       	adc	r25, r1
 ba6:	b2 9f       	mul	r27, r18
 ba8:	70 0d       	add	r23, r0
 baa:	81 1d       	adc	r24, r1
 bac:	11 24       	eor	r1, r1
 bae:	91 1d       	adc	r25, r1
 bb0:	08 95       	ret

00000bb2 <_exit>:
 bb2:	f8 94       	cli

00000bb4 <__stop_program>:
 bb4:	ff cf       	rjmp	.-2      	; 0xbb4 <__stop_program>
